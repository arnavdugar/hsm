package mermaid

import (
	"bytes"
	"os"

	"github.com/arnavdugar/hsm/codegen/parser"
)

type Renderer parser.Machine

func Create(machine *parser.Machine) *Renderer {
	return (*Renderer)(machine)
}

func (renderer *Renderer) Render() ([]byte, error) {
	var buffer bytes.Buffer

	buffer.WriteString(`<!---
Autogenerated. Do not modify.

This file can be regenerated by running
go run github.com/arnavdugar/hsm/codegen`)
	for _, value := range os.Args[1:] {
		buffer.WriteString(" ")
		buffer.WriteString(value)
	}
	buffer.WriteString(`
--->
# State Machine

` + "```mermaid\nstateDiagram-v2\n")

	for _, state := range renderer.States.Values {
		for _, action := range state.TransitionActions {
			for _, transition := range action.Transitions {
				buffer.WriteString("  ")
				buffer.WriteString(state.Name)
				buffer.WriteString(" --> ")
				buffer.WriteString(renderer.StatesMap[transition.Destination].Name)
				buffer.WriteString(": ")
				if transition.Guard != "" {
					buffer.WriteString("[")
					buffer.WriteString(transition.Guard)
					buffer.WriteString("] ")
				}
				buffer.WriteString(action.Action)
				buffer.WriteString("\n")
			}
		}
	}

	buffer.WriteString("```\n")

	return buffer.Bytes(), nil
}
